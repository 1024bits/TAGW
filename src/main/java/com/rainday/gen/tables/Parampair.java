/*
 * This file is generated by jOOQ.
 */
package com.rainday.gen.tables;


import com.rainday.gen.DefaultSchema;
import com.rainday.gen.Indexes;
import com.rainday.gen.Keys;
import com.rainday.gen.tables.records.ParampairRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Parampair extends TableImpl<ParampairRecord> {

    private static final long serialVersionUID = 979136319;

    /**
     * The reference instance of <code>parampair</code>
     */
    public static final Parampair PARAMPAIR = new Parampair();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ParampairRecord> getRecordType() {
        return ParampairRecord.class;
    }

    /**
     * The column <code>parampair.id</code>. 自增主键
     */
    public final TableField<ParampairRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "自增主键");

    /**
     * The column <code>parampair.relay_id</code>. relayId
     */
    public final TableField<ParampairRecord, Integer> RELAY_ID = createField("relay_id", org.jooq.impl.SQLDataType.INTEGER, this, "relayId");

    /**
     * The column <code>parampair.in_name</code>. 入参名称
     */
    public final TableField<ParampairRecord, String> IN_NAME = createField("in_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "入参名称");

    /**
     * The column <code>parampair.in_type</code>. 入参类型
     */
    public final TableField<ParampairRecord, String> IN_TYPE = createField("in_type", org.jooq.impl.SQLDataType.VARCHAR(20), this, "入参类型");

    /**
     * The column <code>parampair.out_name</code>. 出参名称
     */
    public final TableField<ParampairRecord, String> OUT_NAME = createField("out_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "出参名称");

    /**
     * The column <code>parampair.out_type</code>. 出参类型
     */
    public final TableField<ParampairRecord, String> OUT_TYPE = createField("out_type", org.jooq.impl.SQLDataType.VARCHAR(20), this, "出参类型");

    /**
     * Create a <code>parampair</code> table reference
     */
    public Parampair() {
        this(DSL.name("parampair"), null);
    }

    /**
     * Create an aliased <code>parampair</code> table reference
     */
    public Parampair(String alias) {
        this(DSL.name(alias), PARAMPAIR);
    }

    /**
     * Create an aliased <code>parampair</code> table reference
     */
    public Parampair(Name alias) {
        this(alias, PARAMPAIR);
    }

    private Parampair(Name alias, Table<ParampairRecord> aliased) {
        this(alias, aliased, null);
    }

    private Parampair(Name alias, Table<ParampairRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Parampair(Table<O> child, ForeignKey<O, ParampairRecord> key) {
        super(child, key, PARAMPAIR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PARAMPAIR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ParampairRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PARAMPAIR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ParampairRecord> getPrimaryKey() {
        return Keys.KEY_PARAMPAIR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ParampairRecord>> getKeys() {
        return Arrays.<UniqueKey<ParampairRecord>>asList(Keys.KEY_PARAMPAIR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Parampair as(String alias) {
        return new Parampair(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Parampair as(Name alias) {
        return new Parampair(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Parampair rename(String name) {
        return new Parampair(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Parampair rename(Name name) {
        return new Parampair(name, null);
    }
}
